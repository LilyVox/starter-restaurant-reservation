{"version":3,"sources":["layout/subComponents/NavLinkItem.js","layout/menu/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","layout/subComponents/ReservationItem.js","layout/subComponents/ReservationDisplay.js","layout/subComponents/ErrorAlert.js","layout/subComponents/ErrorAlertDisplay.js","tables/TableShape.js","layout/subComponents/TableDisplay.js","tables/tables.service.js","dashboard/Dashboard.js","layout/subComponents/NotFound.js","reservations/NewReservationForm.js","reservations/reservation.service.js","reservations/main.js","reservations/SeatReservation.js","tables/TableForm.js","tables/main.js","search/search.service.js","search/main.js","utils/useQuery.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["NavLinkItem","to","icon","text","className","Menu","id","type","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","ReservationItem","res","index","suppressSeat","cancelHandler","showWhenFinished","SeatDisplay","href","reservation_id","EditDisplay","CancelDisplay","onClick","data-reservation-id-cancel","isFinished","condition","seatCondition","first_name","last_name","people","data-reservation-id-status","reservation_time","ReservationDisplay","ifDataEmpty","_","isEmpty","reservationDisplayClasses","ErrorAlert","ErrorAlertDisplay","errors","length","errorDisplay","TableShape","table","finishHandler","style","width","table_name","capacity","data-table-id-status","table_id","data-table-id-finish","TableDisplay","tables","tableList","sendNewTable","body","JSON","stringify","request","method","seatTable","unseatTable","loadTables","Dashboard","useState","setReservations","setTables","errorArray","setErrorArray","history","useHistory","useEffect","abortControllerReservation","AbortController","abortControllerTable","listReservations","catch","abort","window","confirm","ok","push","currentDate","split","year","month","day","setMonth","setDate","previous","next","NotFound","NewReservationForm","submitHandler","changeHandler","slice","onSubmit","onChange","htmlFor","placeholder","required","autoFocus","loadReservation","updateReservationStatus","updateExistingReservation","sendNewReservation","reservationObject","ReservationMain","location","useLocation","setReservation","reservationsError","setReservationsError","pathArr","pathname","areWeEditing","e","preventDefault","checkFields","updatedReservation","reservationDate","getDay","getHours","getMinutes","replace","target","keyName","Number","phoneNum","formatPhoneNum","goBack","SeatReservation","useParams","setError","tablesError","setTablesError","tableIdValue","seatHandler","tableSelected","hasOwnProperty","selectHandler","TableOptionDisplay","tableOptions","disabled","defaultValue","TableForm","tableObject","TableCUMain","setTable","errDisplay","search","mobile_number","SearchHomepage","reservationSearch","setReservationSearch","reservationSearchCondition","formData","FormData","mb","get","useQuery","URLSearchParams","Routes","query","exact","path","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ded5f7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavLinkItem = ({to = '/', icon = '', text = ''}) => {\r\n  return (\r\n      <li className='nav-item'>\r\n        <Link className='nav-link' to={`${to}`}>\r\n          <span className={`oi ${icon}`} />\r\n          &nbsp;{`${text}`}\r\n        </Link>\r\n      </li>\r\n  );\r\n};\r\n\r\nexport default NavLinkItem;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLinkItem from '../subComponents/NavLinkItem';\r\n\r\n/**\r\n * Defines the menu for this application.\r\n *\r\n * @returns {JSX.Element} the menu.\r\n */\r\n\r\nfunction Menu() {\r\n  return (\r\n    <nav className='navbar navbar-dark align-items-start p-0'>\r\n      <div className='container-fluid d-flex flex-column p-0'>\r\n        <Link\r\n          className='navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0'\r\n          to='/'>\r\n          <div className='sidebar-brand-text mx-3'>\r\n            <span>Periodic Tables</span>\r\n          </div>\r\n        </Link>\r\n        <hr className='sidebar-divider my-0' />\r\n        <ul className='nav navbar-nav text-light' id='accordionSidebar'>\r\n          <NavLinkItem to='/dashboard' icon='oi-dashboard' text='Dashboard'/>\r\n          <NavLinkItem to='/search' icon='oi-magnifying-glass' text='Search'/>\r\n          <NavLinkItem to='/reservations/new' icon='oi-plus' text='New Reservation'/>\r\n          <NavLinkItem to='/tables/new' icon='oi-layers' text='New Table'/>\r\n        </ul>\r\n        <div className='text-center d-none d-md-inline'>\r\n          <button className='btn rounded-circle border-0' id='sidebarToggle' type='button' />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\r\nconst timeFormat = /\\d\\d:\\d\\d/;\r\n\r\n/**\r\n * Formats a Date object as YYYY-MM-DD.\r\n *\r\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\r\n * You may export this function if you need it.\r\n *\r\n * @param date\r\n *  an instance of a date object\r\n * @returns {string}\r\n *  the specified Date formatted as YYYY-MM-DD\r\n */\r\nfunction asDateString(date) {\r\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\r\n    .toString(10)\r\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\r\n}\r\n\r\n/**\r\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\r\n * @param dateString\r\n *  ISO-8601 date string\r\n * @returns {*}\r\n *  the specified date string formatted as YYYY-MM-DD\r\n */\r\nexport function formatAsDate(dateString) {\r\n  return dateString.match(dateFormat)[0];\r\n}\r\n\r\n/**\r\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\r\n * @param timeString\r\n *  HH:MM:SS time string\r\n * @returns {*}\r\n *  the specified time string formatted as YHH:MM.\r\n */\r\nexport function formatAsTime(timeString) {\r\n  return timeString.match(timeFormat)[0];\r\n}\r\n\r\n/**\r\n * Today's date as YYYY-MM-DD.\r\n * @returns {*}\r\n *  the today's date formatted as YYYY-MM-DD\r\n */\r\nexport function today() {\r\n  return asDateString(new Date());\r\n}\r\n\r\n/**\r\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\r\n * @param currentDate\r\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\r\n * @returns {*}\r\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\r\n */\r\nexport function previous(currentDate) {\r\n  let [ year, month, day ] = currentDate.split(\"-\");\r\n  month -= 1;\r\n  const date = new Date(year, month, day);\r\n  date.setMonth(date.getMonth());\r\n  date.setDate(date.getDate() - 1);\r\n  return asDateString(date);\r\n}\r\n\r\n/**\r\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\r\n * @param currentDate\r\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\r\n * @returns {*}\r\n *  the date one day after currentDate, formatted as YYYY-MM-DD\r\n */\r\nexport function next(currentDate) {\r\n  let [ year, month, day ] = currentDate.split(\"-\");\r\n  month -= 1;\r\n  const date = new Date(year, month, day);\r\n  date.setMonth(date.getMonth());\r\n  date.setDate(date.getDate() + 1);\r\n  return asDateString(date);\r\n}\r\n","import { formatAsDate } from \"./date-time\";\r\n\r\nfunction formatDate(reservation) {\r\n  if(!reservation) return reservation;\r\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\r\n  return reservation;\r\n}\r\n\r\n/**\r\n * Formats the reservation_date property of a reservation.\r\n * @param reservations\r\n *  a single reservation, or an array of reservations.\r\n * @returns {[reservation]|reservation}\r\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\r\n */\r\nexport default function formatReservationDate(reservations) {\r\n  return Array.isArray(reservations)\r\n    ? reservations.map(formatDate)\r\n    : formatDate(reservations);\r\n}\r\n","/**\r\n * Defines the base URL for the API.\r\n * The default values is overridden by the `API_BASE_URL` environment variable.\r\n */\r\nimport formatReservationDate from \"./format-reservation-date\";\r\nimport formatReservationTime from \"./format-reservation-date\";\r\n\r\nconst API_BASE_URL =\r\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\r\n\r\n/**\r\n * Defines the default headers for these functions to work with `json-server`\r\n */\r\nconst headers = new Headers();\r\nheaders.append(\"Content-Type\", \"application/json\");\r\n\r\n/**\r\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\r\n *\r\n * This function is NOT exported because it is not needed outside of this file.\r\n *\r\n * @param url\r\n *  the url for the requst.\r\n * @param options\r\n *  any options for fetch\r\n * @param onCancel\r\n *  value to return if fetch call is aborted. Default value is undefined.\r\n * @returns {Promise<Error|any>}\r\n *  a promise that resolves to the `json` data or an error.\r\n *  If the response is not in the 200 - 399 range the promise is rejected.\r\n */\r\nasync function fetchJson(url, options, onCancel) {\r\n  try {\r\n    const response = await fetch(url, options);\r\n\r\n    if (response.status === 204) {\r\n      return null;\r\n    }\r\n\r\n    const payload = await response.json();\r\n\r\n    if (payload.error) {\r\n      return Promise.reject({ message: payload.error });\r\n    }\r\n    return payload.data;\r\n  } catch (error) {\r\n    if (error.name !== \"AbortError\") {\r\n      console.error(error.stack);\r\n      throw error;\r\n    }\r\n    return Promise.resolve(onCancel);\r\n  }\r\n}\r\n\r\n/**\r\n * Retrieves all existing reservation.\r\n * @returns {Promise<[reservation]>}\r\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\r\n */\r\n\r\nexport async function listReservations(params, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations`);\r\n  Object.entries(params).forEach(([key, value]) =>\r\n    url.searchParams.append(key, value.toString())\r\n  );\r\n  return await fetchJson(url, { headers, signal }, [])\r\n    .then(formatReservationDate)\r\n    .then(formatReservationTime);\r\n}\r\n","import React from 'react';\r\n\r\nconst ReservationItem = ({\r\n  res,\r\n  index,\r\n  suppressSeat = null,\r\n  cancelHandler = null,\r\n  showWhenFinished,\r\n}) => {\r\n  const SeatDisplay = () => {\r\n    return (\r\n      <a className='btn btn-success' href={`/reservations/${res.reservation_id}/seat`}>\r\n        Seat\r\n      </a>\r\n    );\r\n  };\r\n  const EditDisplay = () => {\r\n    return (\r\n      <a className='btn btn-primary' href={`/reservations/${res.reservation_id}/edit`}>\r\n        Edit\r\n      </a>\r\n    );\r\n  };\r\n  const CancelDisplay = () => {\r\n    if (cancelHandler === null) return null;\r\n    return (\r\n      <button\r\n        className='btn btn-primary'\r\n        onClick={() => cancelHandler(res.reservation_id)}\r\n        data-reservation-id-cancel={res.reservation_id}>\r\n        Cancel\r\n      </button>\r\n    );\r\n  };\r\n  let isFinished = res.status === 'finished';\r\n  let condition = !showWhenFinished || isFinished || showWhenFinished;\r\n  let seatCondition = suppressSeat ? false : res.status === 'booked';\r\n  return (\r\n    condition && (\r\n      <div\r\n        className='card text-center bg-transparent border-warning border-bottom rounded-3 border-0 m-2 shadow'\r\n        key={index}>\r\n        <div className='card-header'>{`Reservation ID: ${res.reservation_id}`}</div>\r\n        <div className='card-body'>\r\n          {`${res.first_name}, ${res.last_name}`}\r\n          <br />\r\n          {`Reservation for ${res.people}`}\r\n        </div>\r\n        <div\r\n          className='card-body'\r\n          data-reservation-id-status={res.reservation_id}>{`${res.status}`}</div>\r\n        <div className='card-footer'>\r\n          {!isFinished && <CancelDisplay />}\r\n          {` ${res.reservation_time} `}\r\n          <EditDisplay />\r\n        </div>\r\n        {!isFinished && seatCondition && <SeatDisplay />}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ReservationItem;\r\n","import React from 'react';\r\nimport ReservationItem from './ReservationItem';\r\nimport _ from 'underscore';\r\n\r\nconst ReservationDisplay = ({ reservations, cancelHandler, showWhenFinished = false }) => {\r\n  const ifDataEmpty = _.isEmpty(reservations);\r\n  const reservationDisplayClasses = 'row m-1 gx-0';\r\n\r\n  if (Array.isArray(reservations) && !ifDataEmpty) {\r\n    return (\r\n      <div className={reservationDisplayClasses}>\r\n        {reservations.map((res) => (\r\n          <ReservationItem\r\n            key={res.reservation_id}\r\n            res={res}\r\n            index={res.reservation_id}\r\n            cancelHandler={cancelHandler}\r\n            showWhenFinished={showWhenFinished}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  } else if (typeof reservations === 'object' && !ifDataEmpty) {\r\n    return (\r\n      <div className={reservationDisplayClasses}>\r\n        <ReservationItem\r\n          res={reservations}\r\n          index={reservations.reservation_id}\r\n          cancelHandler={cancelHandler}\r\n          showWhenFinished={showWhenFinished}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className={'row m-3'}>{`No reservations were found.`}</div>;\r\n  }\r\n};\r\n\r\nexport default ReservationDisplay;\r\n","import React from 'react';\r\n\r\n/**\r\n * Defines the alert message to render if the specified error is truthy.\r\n * @param error\r\n *  an instance of an object with `.message` property as a string, typically an Error instance.\r\n * @returns {JSX.Element}\r\n *  a bootstrap danger alert that contains the message string.\r\n */\r\n\r\nfunction ErrorAlert({ error }) {\r\n  let message = error?.error || error?.message;\r\n  return (\r\n    !!message && (\r\n      <div className=\"alert alert-danger m-2\">Error: {message}</div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ErrorAlert;\r\n","import React from 'react';\r\nimport ErrorAlert from './ErrorAlert';\r\n/**\r\n * Defines the alert message to render if the specified error is truthy.\r\n * @param error\r\n *  an instance of an object with `.message` property as a string, typically an Error instance.\r\n * @returns {JSX.Element}\r\n *  a bootstrap danger alert that contains the message string.\r\n */\r\n\r\nfunction ErrorAlertDisplay({ errors = [] }) {\r\n  let condition = errors.length > 1;\r\n  if(!condition) return (<ErrorAlert error={{ error: errors[0] }} />)\r\n  let errorDisplay = errors.map((error, index) => <ErrorAlert key={index} error={{ error: error }} />);\r\n  return !!condition && <div className='alert alert-danger m-2'>{errorDisplay}</div>;\r\n}\r\n\r\nexport default ErrorAlertDisplay;\r\n","import React from 'react';\r\n\r\nexport const TableShape = ({ table, finishHandler }) => {\r\n  let condition = table.status === 'occupied';\r\n  return (\r\n    <div\r\n      className='card flex-4 text-center bg-transparent border-bottom rounded-3 border-0 m-2 shadow'\r\n      style={{ width: '16EM' }}>\r\n      <div className='card-header border-secondary'>{`${table.table_name} Seats up to ${table.capacity}`}</div>\r\n      <div\r\n        className={`card-body ${!condition ? 'bg-success' : 'bg-warning'}`}\r\n        data-table-id-status={table.table_id}>\r\n        {table.status} {table.reservation_id && ` with ${table.reservation_id}`}\r\n      </div>\r\n      {condition && (\r\n        <button\r\n          className='btn btn-danger'\r\n          data-table-id-finish={table.table_id}\r\n          onClick={() => finishHandler(table.table_id)}>\r\n          Finish\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableShape;\r\n","import React from 'react';\r\nimport TableShape from '../../tables/TableShape';\r\n\r\nfunction TableDisplay({ tables, finishHandler }) {\r\n  let tableList = null;\r\n  if (tables.length > 0) {\r\n    tableList = tables.map((table) => {\r\n      return <TableShape key={table.table_id} table={table} finishHandler={finishHandler} />;\r\n    });\r\n  }\r\n  return (\r\n    <div className='flex row m-3 gx-0 '>\r\n      <h2 className='px-5'><b>Tables</b></h2>\r\n      {tableList}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableDisplay;\r\n","import 'dotenv';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst headers = new Headers();\r\nheaders.append('Content-Type', 'application/json');\r\n\r\nexport async function sendNewTable(data) {\r\n  let body = JSON.stringify({ data });\r\n  const request = {\r\n    method: 'POST',\r\n    headers,\r\n    body,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/tables/`, request);\r\n}\r\n\r\nexport async function seatTable(reservation_id, table_id) {\r\n  let data = { reservation_id };\r\n  let body = JSON.stringify({ data });\r\n  const request = {\r\n    method: 'PUT',\r\n    headers,\r\n    body,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/tables/${table_id}/seat`, request);\r\n}\r\n\r\nexport async function unseatTable(table_id) {\r\n  const request = {\r\n    method: 'DELETE',\r\n    headers,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/tables/${table_id}/seat`, request);\r\n}\r\n\r\nexport async function loadTables(signal) {\r\n  const request = {\r\n    method: 'GET',\r\n    headers,\r\n    signal,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/tables/`, request)\r\n    .then((response) => response.json())\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport default loadTables;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { listReservations } from '../utils/api';\r\nimport { previous, today, next } from '../utils/date-time';\r\nimport ReservationDisplay from '../layout/subComponents/ReservationDisplay';\r\nimport ErrorAlertDisplay from '../layout/subComponents/ErrorAlertDisplay';\r\nimport TableDisplay from '../layout/subComponents/TableDisplay';\r\nimport { loadTables, unseatTable } from '../tables/tables.service';\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Dashboard({ date, cancelHandler }) {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [tables, setTables] = useState([]);\r\n  const [errorArray, setErrorArray] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(loadDashboard, [date]);\r\n\r\n  function loadDashboard() {\r\n    const abortControllerReservation = new AbortController();\r\n    const abortControllerTable = new AbortController();\r\n    listReservations({ date }, abortControllerReservation.signal)\r\n      .then(setReservations)\r\n      .catch(setErrorArray);\r\n    loadTables(abortControllerTable.signal).then(setTables).catch(setErrorArray);\r\n    return () => {\r\n      abortControllerReservation.abort();\r\n      abortControllerTable.abort();\r\n    };\r\n  }\r\n  const finishHandler = async (table_id) => {\r\n    let timeToFinish = window.confirm('Is this table ready to seat new guests?');\r\n    if (timeToFinish) {\r\n      await unseatTable(table_id)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            history.push('/tables');\r\n          }\r\n        })\r\n        .catch(setErrorArray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=' d-flex row justify-content-center'>\r\n      <div className='mb-3 text-center shadow'>\r\n        <h1 className='m-1'>Dashboard</h1>\r\n        <h4 className=''>Reservations for {date}</h4>\r\n      </div>\r\n      <ErrorAlertDisplay errors={errorArray} />\r\n      <div className='col-6'>\r\n        <ReservationDisplay\r\n          showWhenFinished={false}\r\n          cancelHandler={cancelHandler}\r\n          reservations={reservations}\r\n        />\r\n      </div>\r\n      <div className='col-6'>\r\n        <TableDisplay finishHandler={finishHandler} tables={tables} />\r\n      </div>\r\n      <div className='text-center'>\r\n        <button\r\n          className='btn btn-dark'\r\n          type='button'\r\n          onClick={() => history.push(`/dashboard?date=${previous(date)}`)}>\r\n          Previous Day\r\n        </button>\r\n        <button\r\n          className='btn btn-dark'\r\n          type='button'\r\n          onClick={() => history.push(`/dashboard?date=${today()}`)}>\r\n          Today\r\n        </button>\r\n        <button\r\n          className='btn btn-dark'\r\n          type='button'\r\n          onClick={() => history.push(`/dashboard?date=${next(date)}`)}>\r\n          Next Day\r\n        </button>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\r\n *\r\n * @returns {JSX.Element} the not found page.\r\n */\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h1>Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\n\r\nfunction NewReservationForm({ reservation = {}, submitHandler, changeHandler }) {\r\n  let date = reservation?.reservation_date.slice(0, 10);\r\n  return (\r\n    <form\r\n      onSubmit={submitHandler}\r\n      onChange={changeHandler}\r\n      className=''\r\n      id='reservation_form'\r\n      name='reservation_form'>\r\n      <div className='row-auto'>\r\n        <div className='col-auto'>\r\n          <label className='form-label' htmlFor='first_name'>\r\n            First Name\r\n          </label>\r\n          <input\r\n            name='first_name'\r\n            className='form-control'\r\n            type='text'\r\n            id='first_name'\r\n            placeholder='First Name'\r\n            value={reservation['first_name']}\r\n            onChange={changeHandler}\r\n            required\r\n            autoFocus\r\n          />\r\n          <label className='form-label' htmlFor='last_name'>\r\n            Last Name\r\n          </label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='last_name'\r\n            id='last_name'\r\n            placeholder='Last Name'\r\n            value={reservation['last_name']}\r\n            onChange={changeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col-auto'>\r\n          <label className='form-label' htmlFor='mobile_number'>\r\n            Mobile Number\r\n          </label>\r\n          <input\r\n            name='mobile_number'\r\n            id='mobile_number'\r\n            className='form-control'\r\n            type='tel'\r\n            onChange={changeHandler}\r\n            value={reservation['mobile_number']}\r\n            placeholder='XXX-XXX-XXXX'\r\n            required\r\n          />\r\n          <label htmlFor='people'>People</label>\r\n          <input\r\n            className='form-control'\r\n            type='number'\r\n            name='people'\r\n            id='people'\r\n            required\r\n            value={reservation['people']}\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n        <div className='col-auto'>\r\n          <label className='form-label' htmlFor='reservation_time'>\r\n            Reservation Time\r\n          </label>\r\n          <input\r\n            className='form-control'\r\n            type='time'\r\n            name='reservation_time'\r\n            placeholder='HH:MM'\r\n            value={reservation['reservation_time']}\r\n            onChange={changeHandler}\r\n            required\r\n          />\r\n          <label className='form-label' htmlFor='reservation_date'>\r\n            Reservation Date\r\n          </label>\r\n          <input\r\n            className='form-control'\r\n            type='date'\r\n            id='reservation_date'\r\n            name='reservation_date'\r\n            value={date}\r\n            onChange={changeHandler}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='row m-4'>\r\n        <button type='submit' className='btn btn-warning'>\r\n          Submit Reservation\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewReservationForm;\r\n","import 'dotenv';\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst headers = new Headers();\r\nheaders.append('Content-Type', 'application/json');\r\n\r\nexport async function sendNewReservation(data) {\r\n  let body = JSON.stringify({ data });\r\n  const request = {\r\n    method: 'POST',\r\n    headers,\r\n    body,\r\n  }; // could use axios, chose not to, maybe in the future\r\n  return await fetch(`${API_BASE_URL}/reservations/`, request);\r\n}\r\n\r\nexport async function loadReservation(reservation_id, signal) {\r\n  const request = {\r\n    method: 'GET',\r\n    headers,\r\n    signal,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/reservations/${reservation_id}`, request)\r\n  .then((response)=> response.json())\r\n  .then((response)=> response.data);;\r\n}\r\n\r\nexport async function updateReservationStatus(reservation_id, status){\r\n  let data = { status };\r\n  let body = JSON.stringify({ data });\r\n  const request = {\r\n    method: 'PUT',\r\n    headers,\r\n    body,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/reservations/${reservation_id}/status`, request);\r\n}\r\nexport async function updateExistingReservation(reservation_id, reservation){\r\n  let data = reservation;\r\n  let body = JSON.stringify({ data });\r\n  const request = {\r\n    method: 'PUT',\r\n    headers,\r\n    body,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/reservations/${reservation_id}`, request);\r\n}\r\nexport default sendNewReservation;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ErrorAlertDisplay from '../layout/subComponents/ErrorAlertDisplay';\r\nimport NewReservationForm from './NewReservationForm';\r\nimport sendNewReservation, {\r\n  loadReservation,\r\n  updateExistingReservation,\r\n} from './reservation.service';\r\nconst reservationObject = {\r\n  \"first_name\": '',\r\n  \"last_name\": '',\r\n  \"mobile_number\": '',\r\n  \"reservation_time\": '',\r\n  \"reservation_date\": '',\r\n  \"people\": 0,\r\n};\r\n/**\r\n * @returns the reservation moderation screen.\r\n */\r\nfunction ReservationMain() {\r\n  const location = useLocation();\r\n  const [reservation, setReservation] = useState(reservationObject);\r\n  const [reservationsError, setReservationsError] = useState([{}]);\r\n  const history = useHistory();\r\n  let errors = [];\r\n  let pathArr = location.pathname.split('/');\r\n  let reservation_id = pathArr[2];\r\n  let areWeEditing = pathArr[3] === 'edit';\r\n\r\n  useEffect(() => {\r\n    if (areWeEditing) {\r\n      const abort = new AbortController();\r\n      loadReservation(reservation_id, abort.signal)\r\n        .then(setReservation)\r\n        .catch(setReservationsError);\r\n      return () => {\r\n        abort.abort();\r\n      };\r\n    } else{\r\n      setReservation(reservationObject)\r\n    }\r\n  }, [areWeEditing, reservation_id]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    let validToSend = await checkFields().then((errors) => {\r\n      if (errors.length > 0) return false;\r\n      return true;\r\n    });\r\n    if (validToSend) {\r\n      if (areWeEditing) {\r\n        const updatedReservation = {\r\n          ...reservation,\r\n          reservation_date: reservation.reservation_date.slice(0, 10),\r\n        };\r\n        await updateExistingReservation(reservation_id, updatedReservation).then((response) => {\r\n          if (response.ok) {\r\n            history.push(`/dashboard?date=${formatDate(reservation.reservation_date)}`);\r\n            return response.json();\r\n          }\r\n        }).catch((e)=>errors.push(e));\r\n      } else {\r\n        await sendNewReservation(reservation).then((response) => {\r\n          if (response.ok) {\r\n            history.push(`/dashboard?date=${reservation.reservation_date}`);\r\n            return response.json();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Validates the date to make sure it's reasonable\r\n   */\r\n  async function checkFields() {\r\n    const reservationDate = areWeEditing\r\n      ? new Date(\r\n          `${reservation.reservation_date.slice(0, 10)}T${reservation.reservation_time}:00.000`\r\n        )\r\n      : new Date(`${reservation.reservation_date}T${reservation.reservation_time}:00.000`);\r\n    const today = new Date();\r\n    if (reservationDate.getDay() === 2) {\r\n      errors.push(\"'reservation_date' field: restaurant is closed on tuesday\");\r\n    }\r\n    if (reservationDate < today) {\r\n      errors.push(\"'reservation_date' and 'reservation_time' field must be in the future\");\r\n    }\r\n    if (\r\n      reservationDate.getHours() < 10 ||\r\n      (reservationDate.getHours() === 10 && reservationDate.getMinutes() < 30)\r\n    ) {\r\n      errors.push(\"'reservation_time' field: restaurant is not open until 10:30AM\");\r\n    }\r\n    if (\r\n      reservationDate.getHours() > 22 ||\r\n      (reservationDate.getHours() === 22 && reservationDate.getMinutes() >= 30)\r\n    ) {\r\n      errors.push(\"'reservation_time' field: restaurant is closed after 10:30PM\");\r\n    }\r\n    if (\r\n      reservationDate.getHours() > 21 ||\r\n      (reservationDate.getHours() === 21 && reservationDate.getMinutes() > 30)\r\n    ) {\r\n      errors.push(\r\n        \"'reservation_time' field: reservation must be made at least an hour before closing (10:30PM)\"\r\n      );\r\n    }\r\n    if (errors.length > 0) setReservationsError([...errors]);\r\n    else setReservationsError([]);\r\n    return errors;\r\n  }\r\n  const changeHandler = ({ target }) => {\r\n    let keyName = target.name;\r\n    let value =\r\n      keyName === 'people'\r\n        ? Number(target.value)\r\n        : keyName === 'mobile_number'\r\n        ? formatPhoneNum(target.value)\r\n        : keyName === 'reservation_date'\r\n        ? formatDate(target.value)\r\n        : target.value;\r\n    setReservation({\r\n      ...reservation,\r\n      [keyName]: value,\r\n    });\r\n  };\r\n  const cancelHandler = () => {\r\n    history.goBack();\r\n  };\r\n  function formatPhoneNum(phoneNum) {\r\n    if (phoneNum.match(/[0-9]{3}-[0-9]{3}-[0-9]{4}/)) return phoneNum;\r\n    if (phoneNum.match(/\\d{9}/)) return phoneNum.replace(/(\\d{3})-?(\\d{3})-?(\\d{4})/, '$1-$2-$3');\r\n  }\r\n  function formatDate(reservation_date) {\r\n    if (reservation_date.match(/\\d{4}-\\d{2}-\\d{2}/)) return reservation_date;\r\n    if (reservation_date.match(/\\d{8}/)) return reservation_date.replace(/(\\d{4})-?(\\d{2})-?(\\d{2})/, '$1-$2-$3');\r\n    return reservation_date.slice(0, 10);\r\n  }\r\n\r\n  return (\r\n    <main className='container-fluid justify-content-center'>\r\n      <h1 className='my-0'>{areWeEditing? 'Edit':'Create'} Reservation</h1>\r\n      <ErrorAlertDisplay error={{ reservationsError }} />\r\n      <NewReservationForm\r\n        reservation={reservation}\r\n        submitHandler={submitHandler}\r\n        changeHandler={changeHandler}\r\n      />\r\n      <button className='btn btn-primary' onClick={cancelHandler}>\r\n        Cancel\r\n      </button>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ReservationMain;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { loadReservation } from './reservation.service';\r\nimport { seatTable, loadTables } from '../tables/tables.service';\r\nimport ErrorAlert from '../layout/subComponents/ErrorAlert';\r\nimport ErrorAlertDisplay from '../layout/subComponents/ErrorAlertDisplay';\r\nimport ReservationItem from '../layout/subComponents/ReservationItem';\r\nconst SeatReservation = () => {\r\n  const [reservation, setReservation] = useState({});\r\n  const { reservation_id } = useParams();\r\n  const [error, setError] = useState({});\r\n  const history = useHistory();\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState([]);\r\n  let tableIdValue = 0;\r\n\r\n  useEffect(() => {\r\n    const abort = new AbortController();\r\n    const abortControllerTable = new AbortController();\r\n    loadReservation(reservation_id, abort.signal).then(setReservation).catch(setError);\r\n    loadTables(abortControllerTable.signal).then(setTables).catch(setTablesError);\r\n    return () => {\r\n      abortControllerTable.abort();\r\n      abort.abort();\r\n    };\r\n  }, [reservation_id]);\r\n\r\n  const seatHandler = async (e) => {\r\n    e.preventDefault();\r\n    let tableSelected = tables[tableIdValue];\r\n    if (tableSelected && tableSelected.hasOwnProperty('capacity')) {\r\n      if (tableSelected.capacity >= reservation.people) {\r\n        await seatTable(reservation_id, tableSelected.table_id)\r\n          .then((response) => {\r\n            if (response.ok) history.push('/dashboard');\r\n          })\r\n          .catch(setTablesError);\r\n      } else setError({ error: `${tableSelected.table_name} cannot seat ${reservation.people}` });\r\n    } else setError({ error: `Please select an option below.` });\r\n  };\r\n  const selectHandler = (e) => {\r\n    tableIdValue = e.target.value;\r\n  };\r\n  function TableOptionDisplay() {\r\n    if (Array.isArray(tables)) {\r\n      const tableOptions = tables.map((table, index) => (\r\n        <option key={table.table_id} disabled={table.status === 'occupied'} value={index}>\r\n          {table.table_name} - {table.capacity}\r\n        </option>\r\n      ));\r\n      return (\r\n        <select\r\n          name='table_id'\r\n          className='form-select'\r\n          defaultValue={tableIdValue}\r\n          onSubmit={seatHandler}\r\n          onChange={selectHandler}>\r\n          {tableOptions}\r\n        </select>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex flex-column justify-content-center bg-transparent m-2 shadow'>\r\n      <ErrorAlert error={error} />\r\n      <ErrorAlertDisplay errors={tablesError} />\r\n      <ReservationItem suppressSeat={true} res={reservation} index={reservation.reservation_id}/>\r\n      <TableOptionDisplay />\r\n      <button className='btn btn-success' type='submit' onClick={seatHandler}>\r\n        Submit\r\n      </button>\r\n      <button className='btn btn-primary' onClick={() => history.goBack()}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatReservation;\r\n","import React from 'react';\r\n\r\nconst TableForm = ({ changeHandler, submitHandler }) => {\r\n  return (\r\n    <div className='container'>\r\n      <form\r\n        name='new_table_form'\r\n        onSubmit={submitHandler}\r\n        onChange={changeHandler}\r\n        className='flex-col bg-transparent m-2 p-2'>\r\n        <label className='form-label' htmlFor='table_name'>\r\n          Table Name\r\n        </label>\r\n        <input className='form-control' name='table_name' />\r\n        <label className='form-label' htmlFor='capacity'>\r\n          Capacity\r\n        </label>\r\n        <input className='form-control' name='capacity' />\r\n        <button type='submit' className='btn btn-warning'>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableForm;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ErrorAlert from '../layout/subComponents/ErrorAlert';\r\nimport { sendNewTable } from './tables.service';\r\nimport TableForm from './TableForm';\r\n\r\nconst tableObject = {\r\n  table_name: '',\r\n  capacity: 0,\r\n};\r\n/**\r\n *\r\n * @returns the table creation and update page\r\n */\r\nfunction TableCUMain() {\r\n  const [table, setTable] = useState(tableObject);\r\n  const [tablesError, setTablesError] = useState([]);\r\n  const history = useHistory();\r\n  let errors = [];\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    let validToSend = await checkFields().then((errors) => {\r\n      if (errors.length > 0) return false;\r\n      return true;\r\n    });\r\n    if (validToSend) {\r\n      await sendNewTable(table).then((response) => {\r\n        if (response.ok) {\r\n          history.push(`/dashboard`);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Validates the table info\r\n   */\r\n  async function checkFields() {\r\n    if (table.table_name.length < 2) errors.push('table_name must be at least 2 characters long');\r\n    if (table.capacity < 1) errors.push('capacity must be greater than 0');\r\n    if (errors.length > 0) setTablesError([...errors]);\r\n    else setTablesError([]);\r\n    return errors;\r\n  }\r\n  const changeHandler = ({ target }) => {\r\n    setTable({\r\n      ...table,\r\n      [target.name]: target.name === 'capacity' ? Number(target.value) : target.value,\r\n    });\r\n  };\r\n  const cancelHandler = () => {\r\n    history.goBack();\r\n  };\r\n  let errDisplay =\r\n    tablesError.length > 0\r\n      ? tablesError.map((error, index) => <ErrorAlert key={index} error={{ error: error }} />)\r\n      : null;\r\n  return (\r\n    <main className='container-fluid justify-content-center'>\r\n      <h1 className='my-0'>Create a new Table</h1>\r\n      {errDisplay}\r\n      <TableForm submitHandler={submitHandler} changeHandler={changeHandler} />\r\n      <button className='btn btn-primary' onClick={cancelHandler}>\r\n        Cancel\r\n      </button>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default TableCUMain;\r\n","import 'dotenv';\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst headers = new Headers();\r\nheaders.append('Content-Type', 'application/json');\r\n\r\nexport async function search(mobile_number, signal) {\r\n  const request = {\r\n    method: 'GET',\r\n    headers,\r\n    signal,\r\n  };\r\n  return await fetch(`${API_BASE_URL}/reservations?mobile_number=${mobile_number}`, request)\r\n  .then((response)=> response.json())\r\n  .then((response)=> response.data);\r\n}","import React, { useState } from 'react';\r\nimport ReservationDisplay from '../layout/subComponents/ReservationDisplay';\r\nimport { search } from './search.service';\r\nimport ErrorAlert from '../layout/subComponents/ErrorAlert';\r\nimport _ from 'underscore';\r\nconst SearchHomepage = ({ cancelHandler }) => {\r\n  const [reservationSearch, setReservationSearch] = useState([]);\r\n  const [error, setError] = useState({});\r\n  let reservationSearchCondition = _.isEmpty(reservationSearch);\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const abort = new AbortController();\r\n    const formData = new FormData(e.target);\r\n    let mb = formData.get('mobile_number');\r\n    await search(mb, abort.signal).then(setReservationSearch).catch(setError);\r\n    return () => {\r\n      abort.abort();\r\n    };\r\n  };\r\n  return (\r\n    <main className='text-center bg-transparent m-2'>\r\n      <header className='row shadow'>\r\n        <h1>\r\n          <b>Search</b>\r\n        </h1>\r\n      </header>\r\n      <ErrorAlert error={error} />\r\n      <section className='d-flex bg-transparent row m-2'>\r\n        <div className='col-6'>\r\n          <form className='' onSubmit={submitHandler}>\r\n            <label htmlFor='mobile_number' className='form-label'>\r\n              Mobile Number\r\n            </label>\r\n            <input\r\n              className='form-control'\r\n              name='mobile_number'\r\n              id='mobile_number'\r\n              type='tel'\r\n              placeholder=\"Enter a customer's phone number\"\r\n            />\r\n            <button type='submit' className='btn btn-warning'>\r\n              submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className='col-6'>\r\n          {!reservationSearchCondition ? (\r\n            <ReservationDisplay\r\n              showWhenFinished={true}\r\n              cancelHandler={cancelHandler}\r\n              reservations={reservationSearch}\r\n            />\r\n          ) : (\r\n            `No reservations found`\r\n          )}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SearchHomepage;\r\n","/**\r\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\r\n *\r\n * @example\r\n *\r\n *     const query = useQuery();\r\n *     const date = query.get(\"date\")\r\n */\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default useQuery;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport NotFound from './subComponents/NotFound';\r\nimport ReservationPage from '../reservations/main';\r\nimport SeatReservation from '../reservations/SeatReservation';\r\nimport { updateReservationStatus } from '../reservations/reservation.service';\r\nimport TableCUMain from '../tables/main';\r\nimport SearchHomepage from '../search/main';\r\nimport { today } from '../utils/date-time';\r\nimport useQuery from '../utils/useQuery';\r\n\r\n/**\r\n * Defines all the routes for the application.\r\n *\r\n *\r\n * @returns {JSX.Element}\r\n */\r\nfunction Routes() {\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  const date = query.get('date');\r\n  const cancelHandler = async (reservation_id) => {\r\n    if (window.confirm('Do you want to cancel this reservation? This cannot be undone.')) {\r\n      await updateReservationStatus(reservation_id, 'cancelled').then((response)=>{\r\n        if(response.ok) {\r\n          history.replace('/reservations');\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Switch>\r\n      <Route exact={true} path='/'>\r\n        <Redirect to={'/dashboard'} />\r\n      </Route>\r\n      <Route exact={true} path='/reservations/new'>\r\n        <ReservationPage />\r\n      </Route>\r\n      <Route exact={true} path='/reservations'>\r\n        <Redirect to={'/dashboard'} />\r\n      </Route>\r\n      <Route exact={true} path='/search'>\r\n        <SearchHomepage cancelHandler={cancelHandler} />\r\n      </Route>\r\n      <Route exact={true} path='/reservations/:reservation_id/seat'>\r\n        <SeatReservation />\r\n      </Route>\r\n      <Route exact={true} path='/reservations/:reservation_id/edit'>\r\n        <ReservationPage />\r\n      </Route>\r\n      <Route exact={true} path='/tables/new'>\r\n        <TableCUMain />\r\n      </Route>\r\n      <Route exact={true} path='/tables'>\r\n        <Redirect to={'/dashboard'} />\r\n      </Route>\r\n      <Route path='/dashboard'>\r\n        <Dashboard date={date ? date : today()} cancelHandler={cancelHandler} />\r\n      </Route>\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Menu from './menu/Menu';\r\nimport Routes from './Routes';\r\n\r\nimport './Layout.css';\r\n\r\n/**\r\n * Defines the main layout of the application.\r\n *\r\n * @returns {JSX.Element} the layout of the page.\r\n */\r\nfunction Layout() {\r\n  return (\r\n    <div className='container-fluid text-white bg-dark bg-gradient'>\r\n      <div className='row h-100 '>\r\n        <div className='col-md-2 side-bar bg-dark bg-gradient rounded-1 shadow-lg'>\r\n          <Menu />\r\n        </div>\r\n        <div className='col'>\r\n          <Routes />\r\n        </div>\r\n      </div>\r\n      <footer className=' bg-warning'>\r\n        {/* &#169;LilyVox 2021 */}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"./layout/Layout\";\r\n\r\n/**\r\n * Defines the root application component.\r\n * @returns {JSX.Element}\r\n */\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <Layout />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}